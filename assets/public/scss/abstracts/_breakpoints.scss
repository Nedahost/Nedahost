@use 'functions' as f;

// Breakpoints Map
// xs: Extra small devices (small phones)
// sm: Small devices (large phones)
// md: Medium devices (tablets)
// lg: Large devices (laptops/desktops)
// xl: Extra large devices (large desktops)
// xxl: Ultra large devices (4k, ultra-wide)
$breakpoints: (
  "xs": 320px,    // Small phones
  "sm": 576px,    // Large phones
  "md": 768px,    // Tablets
  "lg": 1024px,   // Laptops/Small desktops
  "xl": 1200px,   // Large desktops
  "xxl": 1400px   // Ultra-wide/4K displays
);

// Mixin για min-width media queries
@mixin breakpoint-up($size) {
  @if map-has-key($breakpoints, $size) {
    @media (min-width: #{map-get($breakpoints, $size)}) {
      @content;
    }
  } @else {
    @warn "Το breakpoint '#{$size}' δεν υπάρχει στο $breakpoints map.";
  }
}

// Mixin για max-width media queries
@mixin breakpoint-down($size) {
  @if map-has-key($breakpoints, $size) {
    @media (max-width: #{map-get($breakpoints, $size) - 1px}) {
      @content;
    }
  } @else {
    @warn "Το breakpoint '#{$size}' δεν υπάρχει στο $breakpoints map.";
  }
}

// Mixin για min-width και max-width media queries
@mixin breakpoint-between($lower, $upper) {
  @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {
    @media (min-width: #{map-get($breakpoints, $lower)}) and (max-width: #{map-get($breakpoints, $upper) - 1px}) {
      @content;
    }
  } @else {
    @warn "Ένα ή και τα δύο breakpoints '#{$lower}' και '#{$upper}' δεν υπάρχουν στο $breakpoints map.";
  }
}

// Mixin για orientation
@mixin orientation($direction) {
  @if $direction == 'portrait' or $direction == 'landscape' {
    @media (orientation: #{$direction}) {
      @content;
    }
  } @else {
    @warn "Το orientation πρέπει να είναι 'portrait' ή 'landscape'";
  }
}

// Mixin για retina displays
@mixin retina {
  @media 
  (-webkit-min-device-pixel-ratio: 2),
  (min-resolution: 192dpi) {
    @content;
  }
}